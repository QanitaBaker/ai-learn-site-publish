"use strict";(self.webpackChunkai_learn_site=self.webpackChunkai_learn_site||[]).push([[1827],{8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(6540);const r={},a=i.createContext(r);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:n},e.children)}},9428:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"reinforcement-learning","title":"Reinforcement Learning","description":"Reinforcement Learning (RL) is an area of Machine Learning where agents learn to make decisions by interacting with an environment to maximize some notion of cumulative reward. RL is used in robotics, gaming, and autonomous systems.","source":"@site/docs/reinforcement-learning.md","sourceDirName":".","slug":"/reinforcement-learning","permalink":"/ai-learn-site-publish/docs/reinforcement-learning","draft":false,"unlisted":false,"editUrl":"https://github.com/QanitaBaker/ai-learn-site/edit/main/docs/reinforcement-learning.md","tags":[],"version":"current","frontMatter":{"id":"reinforcement-learning","title":"Reinforcement Learning"},"sidebar":"tutorialSidebar","previous":{"title":"Deep Learning","permalink":"/ai-learn-site-publish/docs/deep-learning"},"next":{"title":"Natural Language Processing","permalink":"/ai-learn-site-publish/docs/natural-language-processing"}}');var r=t(4848),a=t(8453);const o={id:"reinforcement-learning",title:"Reinforcement Learning"},s=void 0,c={},l=[];function m(e){const n={p:"p",...(0,a.R)(),...e.components};return(0,r.jsx)(n.p,{children:"Reinforcement Learning (RL) is an area of Machine Learning where agents learn to make decisions by interacting with an environment to maximize some notion of cumulative reward. RL is used in robotics, gaming, and autonomous systems."})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);